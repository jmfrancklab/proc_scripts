
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\proc_triwave.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_proc_triwave.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_proc_triwave.py:

Triangle Wave Processing
========================

Processes data acquired after applying a triangular pulse to 
a NMR probe.

.. GENERATED FROM PYTHON SOURCE LINES 8-49



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_proc_triwave_001.png
          :alt: raw together
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_proc_triwave_002.png
          :alt: Raw signal for channel 2
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_proc_triwave_003.png
          :alt: Raw signal for channel 1
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_proc_triwave_004.png
          :alt: STFT magnitude for channel 1, 20 ms time/div
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_asarray.py:83: ComplexWarning: Casting complex values to real discards the imaginary part
      return array(a, dtype, copy=False, order=order)
    C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_asarray.py:83: ComplexWarning: Casting complex values to real discards the imaginary part
      return array(a, dtype, copy=False, order=order)






|

.. code-block:: default

    import numpy as np
    from scipy import signal
    from pyspecProcScripts import *
    from pyspecdata import *
    from pyspecProcScripts import postproc_dict
    from scipy import signal
    import matplotlib.pyplot as plt

    fl = figlist_var()
     # {{{ load data, set units, show raw data
    for searchstr,exp_type,nodename,postproc,corrected_volt in [
            ('201202_triwave_RMprobe_20ms','ODNP_NMR_comp','capture1','chirp',True)
            ]:
        d = find_file(searchstr, exp_type=exp_type, expno=nodename,
                postproc=postproc, lookup=postproc_dict) 
        #{{{ raw data
        fl.next('raw together')
        fl.plot(d)
        fl.next('Raw signal for channel 2')
        fl.plot(d['ch',1], alpha=0.5, label='reflection')    
        fl.next('Raw signal for channel 1')
        fl.plot(d['ch',0], alpha=0.5, label='control')
        #}}}
        #{{{pick channel 1 for data and stft signal
        d = d['ch',1]
        d_data = d.data.real
        dw = np.diff(d.getaxis('t')[:2]).item()
        amp=2*sqrt(2)
        fs= 500e3# 1/dw
        f, t, Zxx = signal.stft(d_data, fs, return_onesided=False, nperseg=1000)
        #}}}
        #{{{plotting
        plt.figure()
        x = np.abs(Zxx)
        plt.pcolormesh(t,f,x, vmin=0, vmax=d_data.max(), shading='gouraud')
        plt.title('STFT magnitude for channel 1, 20 ms time/div')
        plt.ylabel('Frequency [Hz]')
        plt.xlabel('Time [sec]')
        #}}}
        plt.show()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.593 seconds)


.. _sphx_glr_download_auto_examples_proc_triwave.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: proc_triwave.py <proc_triwave.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: proc_triwave.ipynb <proc_triwave.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
