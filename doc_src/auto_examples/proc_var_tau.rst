
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\proc_var_tau.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_proc_var_tau.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_proc_var_tau.py:


Echoes with varied tau lengths
==============================

Processes data which has varying lengths of tau. 
Demonstrates how to load a h5 file. 

.. GENERATED FROM PYTHON SOURCE LINES 8-45



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_proc_var_tau_001.png
          :alt: 201209_Ni_sol_probe_var_tau raw signal!
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_proc_var_tau_002.png
          :alt: 201209_Ni_sol_probe_var_tau raw signal
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_proc_var_tau_003.png
          :alt: 201209_Ni_sol_probe_var_tau echoes
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    c:\users\alex guinness\gitstuff\pyspecdata\pyspecdata\core.py:6022: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
      new_axes.append(axes_tmp[this_slicer])






|

.. code-block:: default

    from pylab import *
    from pyspecdata import *
    from pyspecProcScripts.load_data import postproc_dict
    import h5py as h5

    with figlist_var() as fl:
        for filename, expno, exp_type, postproc, frequency, f_range in [
                ("201209_Ni_sol_probe_var_tau",'var_tau','var_tau','spincore_var_tau_v1',
                    14.89e6,(-13.5e3,0))
                ]:
            fl.basename = filename
            logger.info(strm("analyzing",filename))
            # {{{ JF wanted to see what dataset is called
            fullname = search_filename(filename,
                    exp_type='var_tau',
                    unique=True)
            with h5.File(fullname,'r') as fp:
                logger.info(strm(fp.keys()))
            # }}}
            d = find_file(filename,exp_type=exp_type,expno=expno,postproc=postproc,
                    lookup=postproc_dict,fl=fl)
            d = d['t2':f_range]
            d = d['ph1',+1]['ph2',-2]
            d.ift('t2')
            fl.next('echoes')
            fl.plot(d.real,alpha=0.2,linewidth=0.5)
            fl.plot(abs(d),alpha=0.5,linewidth=1)
            NV = 250e-6*55.4*2*N_A # 400 μL, 55.4 M water molecs, 2 spins/molec
            nu0 = frequency 
            LambdaNMR = 1.55e-4 # 1 G/√W
            I = 0.5
            Vsignal = LambdaNMR * NV * (gammabar_H*2*pi) * I * (I+1) * (hbar*2*pi*nu0)**2 * sqrt(50)
            Vsignal /= 3 * k_B * (273+20)
            axhline(y=Vsignal,alpha=0.2)
            logger.info(strm("Vsignal expected",Vsignal))
            fl.plot(Vsignal, 'x', label='theoretical signal at 0')



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.047 seconds)


.. _sphx_glr_download_auto_examples_proc_var_tau.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: proc_var_tau.py <proc_var_tau.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: proc_var_tau.ipynb <proc_var_tau.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
